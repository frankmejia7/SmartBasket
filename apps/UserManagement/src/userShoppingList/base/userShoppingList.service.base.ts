/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  UserShoppingList as PrismaUserShoppingList,
} from "@prisma/client";

export class UserShoppingListServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserShoppingListCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userShoppingList.count(args);
  }

  async userShoppingLists<T extends Prisma.UserShoppingListFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserShoppingListFindManyArgs>
  ): Promise<PrismaUserShoppingList[]> {
    return this.prisma.userShoppingList.findMany<Prisma.UserShoppingListFindManyArgs>(
      args
    );
  }
  async userShoppingList<T extends Prisma.UserShoppingListFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserShoppingListFindUniqueArgs>
  ): Promise<PrismaUserShoppingList | null> {
    return this.prisma.userShoppingList.findUnique(args);
  }
  async createUserShoppingList<T extends Prisma.UserShoppingListCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserShoppingListCreateArgs>
  ): Promise<PrismaUserShoppingList> {
    return this.prisma.userShoppingList.create<T>(args);
  }
  async updateUserShoppingList<T extends Prisma.UserShoppingListUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserShoppingListUpdateArgs>
  ): Promise<PrismaUserShoppingList> {
    return this.prisma.userShoppingList.update<T>(args);
  }
  async deleteUserShoppingList<T extends Prisma.UserShoppingListDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserShoppingListDeleteArgs>
  ): Promise<PrismaUserShoppingList> {
    return this.prisma.userShoppingList.delete(args);
  }
}
